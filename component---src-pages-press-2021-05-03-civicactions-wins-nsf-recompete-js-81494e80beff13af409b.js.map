{"version":3,"sources":["webpack://civic-actions-homesite/./src/components/hero.js","webpack://civic-actions-homesite/./src/components/link-button.js","webpack://civic-actions-homesite/./src/components/primary-page-cta.js","webpack://civic-actions-homesite/./src/components/seo.js","webpack://civic-actions-homesite/./src/files/icons/CA-white.svg","webpack://civic-actions-homesite/./src/components/red-header.js","webpack://civic-actions-homesite/./src/layouts/red.js","webpack://civic-actions-homesite/./src/pages/press/2021-05-03-civicactions-wins-nsf-recompete.js"],"names":["title","description","className","size","src","text","type","Link","to","subtitle","primaryButtonText","primaryButtonLink","secondaryButtonText","secondaryButtonLink","SEO","image","article","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","defaultDescription","titleTemplate","siteUrl","defaultImage","twitterUsername","seo","url","console","log","htmlAttributes","lang","name","content","property","defaultProps","React","scrolled","setScrolled","scrolledMobile","setScrolledMobile","handleScroll","offset","window","scrollY","useEffect","addEventListener","push","whiteLogo","alt","redLogo","redHeader","right","noTransition","width","customBurgerIcon","menuIcon","customCrossIcon","closeIcon","children","useState","hideSidebar","setHideSidebar","style","position","Helmet","id","tabIndex","hidden","close","href"],"mappings":"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","file":"component---src-pages-press-2021-05-03-civicactions-wins-nsf-recompete-js-81494e80beff13af409b.js","sourcesContent":["import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Hero = ({ title, description }) => {\n    return (\n        <section className='hero-component'>\n            <div className='inner'>\n                <h1>{title}</h1>\n                <p className='body'>{description}</p>\n            </div>\n\n        </section>\n    );\n};\n\nexport default Hero;\n\nHero.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst LinkButton = ({ size, src, text, type }) => (\n  <Link className={`button ${type === 'secondary' ? 'button__secondary' : 'button__primary'} ${size ?? ' '}`}\n    to={src}>\n    {text}\n  </Link>\n)\n\nexport default LinkButton;\n\nLinkButton.propTypes = {\n  size: PropTypes.string,  // Use this only when the button should be 'large'\n  src: PropTypes.string,\n  text: PropTypes.string,\n  type: PropTypes.string,\n};\n","import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkButton from '../components/link-button';\n\nconst PrimaryPageCTA = ({\n  title,\n  subtitle,\n  primaryButtonText, primaryButtonLink,\n  secondaryButtonText, secondaryButtonLink,\n}) => {\n  return (\n      <section className='primary-page-cta'>\n        <div className='inner'>\n          <div className='cta-column primary-page-cta__text'>\n\n            <h2>{title}</h2>\n            <span className={'h3'}>{subtitle}</span>\n\n          </div>\n          <div className='cta-column primary-page-cta__buttons'>\n            <LinkButton\n                src={primaryButtonLink ? primaryButtonLink : '/contact'}\n                type='primary'\n                text={primaryButtonText ? primaryButtonText : 'Put us to work'}\n            />\n            <LinkButton\n                src={secondaryButtonLink ? secondaryButtonLink: '/careers'}\n                type='secondary'\n                text={secondaryButtonText ? secondaryButtonText : 'Join our team'}\n            />\n          </div>\n        </div>\n      </section>\n  );\n};\n\nexport default PrimaryPageCTA;\n\nPrimaryPageCTA.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  primaryButtonText: PropTypes.string,\n  primaryButtonLink: PropTypes.string,\n  secondaryButtonText: PropTypes.string,\n  secondaryButtonLink: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from '@reach/router';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n  const seo = {\n    title: (`${title || defaultTitle} | CivicActions`),\n    description: description || defaultDescription,\n    image: image || `${siteUrl}${defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n  console.log(seo);\n  return (\n    <Helmet\n      htmlAttributes={{ lang: 'en' }}\n      title={seo.title}>\n      <meta name='description' content={seo.description} />\n      <meta name='image' content={seo.image} />\n      {seo.url && <meta property='og:url' content={seo.url} />}\n      {(article ? true : null) && <meta property='og:type' content='article' />}\n      {seo.title && <meta property='og:title' content={seo.title} />}\n      {seo.description && (\n        <meta property='og:description' content={seo.description} />\n      )}\n      {seo.image && <meta property='og:image' content={seo.image} />}\n      <meta name='twitter:card' content='summary_large_image' />\n      {twitterUsername && (\n        <meta name='twitter:creator' content={twitterUsername} />\n      )}\n      {seo.title && <meta name='twitter:title' content={seo.title} />}\n      {seo.description && (\n        <meta name='twitter:description' content={seo.description} />\n      )}\n      {seo.image && <meta name='twitter:image' content={seo.image} />}\n\n    </Helmet>\n  );\n};\nexport default SEO;\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/CA-white-e8d26f610893dfd9387a448d81952c5d.svg\";","import '../sass/styles.scss';\nimport React, { useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport whiteLogo from '../files/icons/CA-white.svg';\nimport redLogo from '../files/icons/ca-extended-logo.svg';\nimport menuIcon from '../files/icons/menu-icon.svg';\nimport closeIcon from '../files/icons/close-icon.svg';\nimport PropTypes from 'prop-types';\nimport MainMenu from './menus/main-menu/main-menu'\nimport MobileMenu from './menus/mobile-menu/mobile-menu';\n\nconst RedHeader = () => {\n\n\n    const [scrolled, setScrolled] = React.useState(false);\n    const [scrolledMobile, setScrolledMobile] = React.useState(false);\n    const handleScroll = () => {\n        const offset = window.scrollY;\n        if (offset > 500) {\n            setScrolled(true);\n        }\n        else if (offset > 300) {\n            setScrolledMobile(true);\n        }\n        else {\n            setScrolled(false);\n            setScrolledMobile(false);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll)\n    })\n    let headerClasses = ['header'];\n    if (scrolled) {\n        headerClasses.push('scrolled');\n    }\n\n    return (\n\n        <header className={`${scrolled ? \"header red-header scrolled\" : \"header red-header\"} ${scrolledMobile ? \"scrolled-mobile\" : \"\"}`}>\n            <div className='red-header--header'><div className='inner'>\n                <Link to='/' className='logo'>\n                    <img className='white-logo' src={whiteLogo} alt='Civic Actions Logo'></img>\n                    <img className='red-logo' src={redLogo} alt='Civic Actions Logo'></img>\n                </Link>\n                <MainMenu redHeader={true} />\n                <MobileMenu\n                    right\n                    noTransition\n                    width={'75%'}\n                    customBurgerIcon={<img alt='mobile menu navigation icon' src={menuIcon} />}\n                    customCrossIcon={<img alt='mobile menu close button' src={closeIcon} />}\n                />\n            </div></div>\n\n        </header>\n    );\n};\n\nexport default RedHeader;\n\nRedHeader.propTypes = {\n    onMenuClick: PropTypes.func,\n    visibility: PropTypes.bool\n};\n","import '../sass/styles.scss';\nimport React, { useState } from 'react';\nimport Header from '../components/red-header.js';\nimport Footer from '../components/footer.js';\nimport Sidebar from '../components/sidebar.js';\nimport { Helmet } from 'react-helmet';\nimport { SkipNavLink } from '../components/skip-nav';\n\nconst RedLayout = ({ children }) => {\n  const [hideSidebar, setHideSidebar] = useState(true);\n\n  let closeSidebar = () => setHideSidebar(true);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en',\n        }}\n      />\n      <div>\n        <SkipNavLink />\n        <div className='red-rectangle'></div>\n        {/*<img className=\"red-rectangle\" src={redRectangle} alt=\"background red color\"></img>*/}\n        <Header />\n        <main id='main-content' className='red--header' tabIndex='-1'>\n          <div>{children}</div>\n        </main>\n        <Footer />\n      </div>\n      <Sidebar hidden={hideSidebar} close={closeSidebar} />\n    </div>\n  );\n};\n\nexport default RedLayout;\n","import '../../sass/styles.scss';\nimport React from 'react';\nimport RedLayout from '../../layouts/red';\nimport SEO from \"../../components/seo\";\nimport Hero from '../../components/hero.js';\nimport { Link } from 'gatsby';\nimport PrimaryPageCTA from \"../../components/primary-page-cta\";\n\nconst NSFRecomplete = () => {\n\n    return (\n        <RedLayout>\n                <SEO\n                    title='NSF awards CivicActions $44M contract for CMS support and improvement of federal science research website'\n                    description='Press release from civicactions.com'\n                />\n            <Hero\n                title='NSF awards CivicActions $44M contract for CMS support and improvement of federal science research website'\n                />\n            <div className='single--press-releases--main'>\n                <div className='inner'>\n                    <span className='body'>Date: May 3, 2021</span>\n                    <p className='body'><Link to='/'>CivicActions</Link> is pleased to announce that the National Science Foundation (NSF) has <a href='https://etc.g2xchange.com/statics/small-business-scores-44m-nsf-web-content-management-system-cms-support-contract/'>awarded us a 5-year contract</a> at $44M to continue working with the agency using human-centered and agile approaches to improve how their website serves the scientific community.</p>\n                    <p className='body'>This will include further improvement of NSF’s web content management system (CMS) through human-centered development, modernization, and enhancement (DME); and ongoing operations and maintenance (O&M). We are delighted to help support the agency’s mission of advancing scientific research and discovery applied to practical problems.</p>\n                    <p className='body'>Our work is slated to begin in spring 2021. This work was awarded through our General Services Administration (GSA) Multiple Award Schedule (MAS) contract.</p>\n                    <p className='body'>Our previous work with NSF has taken a research-based approach to the redesign and modernization of the agency’s website, including the design and development of an improved search feature that easily connects science researchers with opportunities to obtain funding for their work.</p>\n                    <p className='body'>To learn more about how we’re advancing public service, read our <Link to='/case-studies'>latest case studies.</Link><br/></p>\n                </div>\n            </div>\n            <PrimaryPageCTA\n                title='Inspired by newsworthy work?'\n                subtitle='See what we can do together.'\n                primaryButtonText='EXPLORE SERVICES'\n                primaryButtonLink='/services'\n                secondaryButtonText='CONTRACTING INFO'\n                secondaryButtonLink='/contracting'\n            />\n        </RedLayout>\n    );\n};\n\n\n\nexport default NSFRecomplete;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://civic-actions-homesite/./src/components/hero.js","webpack://civic-actions-homesite/./src/files/icons/CA-white.svg","webpack://civic-actions-homesite/./src/components/red-header.js","webpack://civic-actions-homesite/./src/layouts/red.js","webpack://civic-actions-homesite/./src/templates/general.js"],"names":["title","description","className","React","scrolled","setScrolled","scrolledMobile","setScrolledMobile","handleScroll","offset","window","scrollY","useEffect","addEventListener","push","Link","to","src","whiteLogo","alt","redLogo","redHeader","right","noTransition","width","customBurgerIcon","menuIcon","customCrossIcon","closeIcon","children","useState","hideSidebar","setHideSidebar","style","position","Helmet","htmlAttributes","lang","id","tabIndex","hidden","close","generals","data","allStrapiGeneral","nodes","SEO","OGTitle","OGDescription","Title","Hero_text","Body"],"mappings":"kJAgBA,IAZa,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACnB,OACI,2BAASC,UAAU,kBACf,uBAAKA,UAAU,SACX,0BAAKF,GACL,qBAAGE,UAAU,QAAQD,O,0FCTrC,EAAe,IAA0B,uD,kDC4DzC,EAjDkB,WAAO,IAAD,EAGYE,YAAe,GAAxCC,EAHa,KAGHC,EAHG,OAIwBF,YAAe,GAApDG,EAJa,KAIGC,EAJH,KAKdC,EAAe,WACjB,IAAMC,EAASC,OAAOC,QAClBF,EAAS,IACTJ,GAAY,GAEPI,EAAS,IACdF,GAAkB,IAGlBF,GAAY,GACZE,GAAkB,MAI1BK,gBAAU,WACNF,OAAOG,iBAAiB,SAAUL,MAOtC,OAJIJ,GADgB,CAAC,UAEHU,KAAK,YAKnB,0BAAQZ,WAAcE,EAAW,6BAA+B,qBAA/C,KAAsEE,EAAiB,kBAAoB,KACxH,uBAAKJ,UAAU,sBAAqB,uBAAKA,UAAU,SAC/C,gBAAC,EAAAa,KAAD,CAAMC,GAAG,IAAId,UAAU,QACnB,uBAAKA,UAAU,aAAae,IAAKC,EAAWC,IAAI,uBAChD,uBAAKjB,UAAU,WAAWe,IAAKG,IAASD,IAAI,wBAEhD,gBAAC,IAAD,CAAUE,WAAW,IACrB,gBAAC,IAAD,CACIC,OAAK,EACLC,cAAY,EACZC,MAAO,MACPC,iBAAkB,uBAAKN,IAAI,8BAA8BF,IAAKS,MAC9DC,gBAAiB,uBAAKR,IAAI,2BAA2BF,IAAKW,Y,wCCjB9E,EA3BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,GACIC,eAAS,GAAxCC,EAD2B,KACdC,EADc,KAKlC,OACE,uBAAKC,MAAO,CAAEC,SAAU,aACtB,gBAACC,EAAA,EAAD,CACEC,eAAgB,CACdC,KAAM,QAGV,2BACE,gBAAC,IAAD,MACA,uBAAKnC,UAAU,kBAEf,gBAAC,EAAD,MACA,wBAAMoC,GAAG,eAAepC,UAAU,cAAcqC,SAAS,MACvD,2BAAMV,IAER,gBAAC,IAAD,OAEF,gBAAC,IAAD,CAASW,OAAQT,EAAaU,MAnBf,kBAAMT,GAAe,S,wGCqC1C,UAzCwB,SAAC,GAAc,IAE/BU,EAF8B,EAAXC,KAEHC,iBAAiBC,MAAM,GAE7C,OACE,gBAAC,IAAD,KACI,gBAAC,IAAD,CACI7C,MAAO0C,EAASI,IAAIC,QACpB9C,YAAayC,EAASI,IAAIE,gBAEhC,gBAAC,IAAD,CACIhD,MAAO0C,EAASO,MAChBhD,YAAayC,EAASQ,YAE1B,2BAAShD,UAAU,0BACf,uBAAKA,UAAU,SACX,gBAAC,IAAD,CAAeA,UAAU,OAAO2B,SAAUa,EAASS","file":"component---src-templates-general-js-7f0f8029c8340584975c.js","sourcesContent":["import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Hero = ({ title, description }) => {\n    return (\n        <section className='hero-component'>\n            <div className='inner'>\n                <h1>{title}</h1>\n                <p className='body'>{description}</p>\n            </div>\n\n        </section>\n    );\n};\n\nexport default Hero;\n\nHero.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/CA-white-e8d26f610893dfd9387a448d81952c5d.svg\";","import '../sass/styles.scss';\nimport React, { useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport whiteLogo from '../files/icons/CA-white.svg';\nimport redLogo from '../files/icons/ca-extended-logo.svg';\nimport menuIcon from '../files/icons/menu-icon.svg';\nimport closeIcon from '../files/icons/close-icon.svg';\nimport PropTypes from 'prop-types';\nimport MainMenu from './menus/main-menu/main-menu'\nimport MobileMenu from './menus/mobile-menu/mobile-menu';\n\nconst RedHeader = () => {\n\n\n    const [scrolled, setScrolled] = React.useState(false);\n    const [scrolledMobile, setScrolledMobile] = React.useState(false);\n    const handleScroll = () => {\n        const offset = window.scrollY;\n        if (offset > 500) {\n            setScrolled(true);\n        }\n        else if (offset > 300) {\n            setScrolledMobile(true);\n        }\n        else {\n            setScrolled(false);\n            setScrolledMobile(false);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll)\n    })\n    let headerClasses = ['header'];\n    if (scrolled) {\n        headerClasses.push('scrolled');\n    }\n\n    return (\n\n        <header className={`${scrolled ? \"header red-header scrolled\" : \"header red-header\"} ${scrolledMobile ? \"scrolled-mobile\" : \"\"}`}>\n            <div className='red-header--header'><div className='inner'>\n                <Link to='/' className='logo'>\n                    <img className='white-logo' src={whiteLogo} alt='Civic Actions Logo'></img>\n                    <img className='red-logo' src={redLogo} alt='Civic Actions Logo'></img>\n                </Link>\n                <MainMenu redHeader={true} />\n                <MobileMenu\n                    right\n                    noTransition\n                    width={'75%'}\n                    customBurgerIcon={<img alt='mobile menu navigation icon' src={menuIcon} />}\n                    customCrossIcon={<img alt='mobile menu close button' src={closeIcon} />}\n                />\n            </div></div>\n\n        </header>\n    );\n};\n\nexport default RedHeader;\n\nRedHeader.propTypes = {\n    onMenuClick: PropTypes.func,\n    visibility: PropTypes.bool\n};\n","import '../sass/styles.scss';\nimport React, { useState } from 'react';\nimport Header from '../components/red-header.js';\nimport Footer from '../components/footer.js';\nimport Sidebar from '../components/sidebar.js';\nimport { Helmet } from 'react-helmet';\nimport { SkipNavLink } from '../components/skip-nav';\n\nconst RedLayout = ({ children }) => {\n  const [hideSidebar, setHideSidebar] = useState(true);\n\n  let closeSidebar = () => setHideSidebar(true);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en',\n        }}\n      />\n      <div>\n        <SkipNavLink />\n        <div className='red-rectangle'></div>\n        {/*<img className=\"red-rectangle\" src={redRectangle} alt=\"background red color\"></img>*/}\n        <Header />\n        <main id='main-content' className='red--header' tabIndex='-1'>\n          <div>{children}</div>\n        </main>\n        <Footer />\n      </div>\n      <Sidebar hidden={hideSidebar} close={closeSidebar} />\n    </div>\n  );\n};\n\nexport default RedLayout;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport RedLayout from '../layouts/red';\nimport Hero from \"../components/hero\";\nimport ReactMarkdown from \"react-markdown\";\nimport SEO from \"../components/seo\";\n\nconst GeneralTemplate = ({ data }) => {\n\n  const generals = data.allStrapiGeneral.nodes[0];\n\n  return (\n    <RedLayout>\n        <SEO\n            title={generals.SEO.OGTitle}\n            description={generals.SEO.OGDescription}\n        />\n      <Hero\n          title={generals.Title}\n          description={generals.Hero_text}\n      />\n      <section className='section--general--body'>\n          <div className='inner'>\n              <ReactMarkdown className='body' children={generals.Body}/>\n          </div>\n      </section>\n\n    </RedLayout>\n  );\n};\n\nexport const query = graphql`\n  query generalContent {\n    allStrapiGeneral {\n      nodes {\n        Hero_text\n        Body\n        Path\n        Title\n        SEO {\n          OGTitle\n          OGDescription\n        }\n      }\n    }\n  }\n`;\n\nexport default GeneralTemplate;\n"],"sourceRoot":""}
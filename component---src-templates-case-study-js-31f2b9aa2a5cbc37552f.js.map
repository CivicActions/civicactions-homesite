{"version":3,"sources":["webpack://civic-actions-homesite/./src/components/header.js","webpack://civic-actions-homesite/./src/components/primary-page-cta.js","webpack://civic-actions-homesite/./src/layouts/general.js","webpack://civic-actions-homesite/./src/components/case-study-hero.js","webpack://civic-actions-homesite/./src/templates/case-study.js"],"names":["useState","scroll","setScroll","useEffect","window","addEventListener","scrollY","scrollMobile","setScrollMobile","className","Link","to","src","extendedLogo","alt","redHeader","right","noTransition","width","customBurgerIcon","menuIcon","customCrossIcon","closeIcon","title","subtitle","primaryButtonText","secondaryButtonText","secondaryButtonLink","type","text","children","hideSidebar","setHideSidebar","style","position","htmlAttributes","lang","id","hidden","close","client","description","caseStudy","data","allStrapiCaseStudy","edges","node","Client_Name","Related_Case_Studies","Helmet","data-react-helmet","Title","Summary","Hero_Image","url","alternativeText","caption","Stats","map","index","stat","Numerical_Element","Content_Element","Quote","quote","source","Source","classes","Challenge_Goal","Challenge","Client_Goal","Expertise","Expertise_Content","Tools_Technologies","Tools_Technologies_Content","Approach","approachItem","Text","Image","Key_Outcome","staff_profiles","G","image","getImage","Name","Role","length","href","Path","Cover_Image"],"mappings":"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","file":"component---src-templates-case-study-js-31f2b9aa2a5cbc37552f.js","sourcesContent":["import '../sass/styles.scss';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'gatsby';\nimport extendedLogo from '../files/icons/ca-extended-logo.svg';\nimport menuIcon from '../files/icons/menu-icon.svg';\nimport closeIcon from '../files/icons/close-icon.svg';\nimport PropTypes from 'prop-types';\nimport MobileMenu from '../components/mobile-menu/mobile-menu';\nimport MainMenu from '../components/main-menu/main-menu'\n\nconst Header = () => {\n\n\n  const [scroll, setScroll] = useState(false)\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      setScroll(window.scrollY > 500)\n    })\n\n  }, []);\n  const [scrollMobile, setScrollMobile] = useState(false)\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      setScrollMobile(window.scrollY > 320)\n    })\n\n  }, []);\n  return (\n    <header className={`${scroll ? \"header scrolled\" : \"header\"} ${scrollMobile ? \"scrolled-mobile\" : ''}`}>\n      <div className='inner'>\n        <Link to='/' className='logo'>\n          <img src={extendedLogo} alt='Civic Actions Logo'></img>\n        </Link>\n        <MainMenu redHeader={false} />\n        <MobileMenu\n          right\n          noTransition\n          width={'75%'}\n          customBurgerIcon={<img src={menuIcon} />}\n          customCrossIcon={<img src={closeIcon} />}\n        />\n      </div>\n    </header>\n\n  );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  onMenuClick: PropTypes.func,\n  visibility: PropTypes.bool\n};\n","import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkButton from '../components/link-button';\n\nconst PrimaryPageCTA = ({\n  title,\n  subtitle,\n  primaryButtonText,\n  secondaryButtonText, secondaryButtonLink,\n}) => {\n  return (\n    <section className='primary-page-cta'>\n      <div className='inner'>\n        <div className='column'>\n\n          <h2>{title}</h2>\n          <span className={'h3'}>{subtitle}</span>\n\n        </div>\n        <div className='row'>\n          <LinkButton src='/contact' type='primary' text={primaryButtonText} />\n          <LinkButton\n            src={secondaryButtonLink}\n            type='secondary'\n            text={secondaryButtonText}\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PrimaryPageCTA;\n\nPrimaryPageCTA.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  primaryButtonText: PropTypes.string.isRequired,\n  secondaryButtonText: PropTypes.string.isRequired,\n  secondaryButtonLink: PropTypes.string.isRequired,\n};\n","import '../sass/styles.scss';\nimport React, { useState } from 'react';\nimport Header from '../components/header.js';\nimport Footer from '../components/footer.js';\nimport Sidebar from '../components/sidebar.js';\nimport { Helmet } from 'react-helmet';\nimport { SkipNavLink } from '../components/skip-nav';\n\nconst GeneralLayout = ({ children }) => {\n  const [hideSidebar, setHideSidebar] = useState(true);\n  let openSidebar = () => setHideSidebar(false);\n  let closeSidebar = () => setHideSidebar(true);\n  return (\n    <div style={{ position: 'relative' }}>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en',\n        }}\n      />\n      <div>\n        <SkipNavLink id=\"main-content\" />\n        <Header />\n        <main id=\"main-content\">\n          <div>{children}</div>\n        </main>\n        <Footer />\n      </div>\n      <Sidebar hidden={hideSidebar} close={closeSidebar} />\n    </div>\n  );\n};\n\nexport default GeneralLayout;\n","import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CaseStudyHero = ({ client, title, description }) => {\n    return (\n        <div className='hero-component'>\n            <div className='inner'>\n                <h1>{title}</h1>\n                <span className='client-name'>{client}</span>\n                <p className='body'>{description}</p>\n            </div>\n\n        </div>\n    );\n};\n\nexport default CaseStudyHero;\n\nCaseStudyHero.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    client: PropTypes.string,\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport ReactMarkdown from \"react-markdown\";\nimport GeneralLayout from '../layouts/general';\nimport { Helmet } from \"react-helmet\";\nimport CaseStudyHero from \"../components/case-study-hero\";\nimport Quote from \"../components/quote\";\nimport PrimaryPageCTA from \"../components/primary-page-cta\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst CaseStudyTemplate = ({ data }) => {\n  const caseStudy = data.allStrapiCaseStudy.edges[0].node;\n  const { Client_Name, Related_Case_Studies } = caseStudy\n\n  return (\n    <GeneralLayout>\n      <Helmet>\n        <title data-react-helmet=\"true\">{caseStudy.Title}</title>\n      </Helmet>\n      <div className='case-studies'>\n        <CaseStudyHero\n          client={Client_Name}\n          title={caseStudy.Title}\n          description={caseStudy.Summary}\n        />\n\n        {caseStudy.Hero_Image[0] &&\n          <div className='case-study--hero-image'>\n            <img src={caseStudy.Hero_Image[0].url} alt={caseStudy.Hero_Image[0].alternativeText}></img>\n            {caseStudy.Hero_Image[0].caption && <span className='caption'>{caseStudy.Hero_Image[0].caption}</span>}\n          </div>\n        }\n\n        <section className='section--case-study--stats'>\n          <div className='stats--wrapper'>\n            <div className='inner'>\n              {caseStudy.Stats.map(({ stat }, index) => (\n                <div className='single-stat'>\n                  <h2 className='stat--number'>{caseStudy.Stats[index].Numerical_Element}</h2>\n                  <p className='body stat--text'>{caseStudy.Stats[index].Content_Element}</p>\n                </div>\n\n              ))}\n            </div>\n          </div>\n\n        </section>\n        {caseStudy.Quote &&\n          <Quote\n            quote={caseStudy.Quote.Quote}\n            source={caseStudy.Quote.Source}\n            classes='first-quote'\n          />\n        }\n\n        {caseStudy.Challenge_Goal &&\n          <section className='section--case-study--challenge-to-tools'>\n            <div className='inner'>\n              <div className='case-study-challenge-goal'>\n                <div className='challenge'>\n                  <h2>The challenge</h2>\n                  <ReactMarkdown className='body' source={caseStudy.Challenge_Goal.Challenge} />\n                  <p className='body'>{caseStudy.Challenge_Goal.Challenge}</p>\n                </div>\n                <div className='goal'>\n                  <h3>Client goal</h3>\n                  <ReactMarkdown className='body' children={caseStudy.Challenge_Goal.Client_Goal} />\n\n                </div>\n              </div>\n              <div className='case-study--expertise-tools'>\n                <div className='expertise'>\n                  <h3>Expertise</h3>\n                  <ReactMarkdown className='body' children={caseStudy.Expertise[0].Expertise_Content} />\n                </div>\n                <div className='tools'>\n                  <h3>Tools and technologies</h3>\n                  <ReactMarkdown className='body'\n                    children={caseStudy.Tools_Technologies[0].Tools_Technologies_Content} />\n                </div>\n              </div>\n            </div>\n          </section>\n        }\n\n\n\n        <section className='section--case-study--approaches'>\n\n          {caseStudy.Approach.map((approachItem, index) => (\n            <div className='inner'>\n              {index === 0 &&\n                <div className='first-approach'>\n                  <h2>{approachItem.Title}</h2>\n                  <ReactMarkdown className='body' children={approachItem.Text} />\n                </div>\n              }\n              {index != 0 &&\n                <div className={approachItem.Image ? 'approach--with-image' : 'approach'}>\n\n                  <div className='title-text--wrapper'>\n                    <h3>{approachItem.Title}</h3>\n                    <ReactMarkdown className='body' children={approachItem.Text} />\n                  </div>\n                  {approachItem.Image && <div className='image--wrapper'>\n                    <div>\n                      {approachItem.Image.url &&\n                        <img src={approachItem.Image[0].url}\n                          alt={approachItem.Image[0].alternativeText}>\n                        </img>\n                      }\n                      {approachItem.Image.caption &&\n                        <span className='caption'>{approachItem.Image[0].caption}</span>\n                      }\n                    </div>\n\n                  </div>\n                  }\n\n                </div>\n              }\n\n            </div>\n          ))}\n\n        </section>\n\n        {/* Todo Key outcomes*/}\n        {caseStudy.Key_Outcome && <section className='section--case-study--outcomes'>\n          <h2>Key outcomes</h2>\n          <div className='inner'>\n\n            {caseStudy.Key_Outcome.map(({ node }, index) => (\n              <div className='key-outcome'>\n                <p className='label'>{caseStudy.Key_Outcome[index].Title}</p>\n                <ReactMarkdown className='body' children={caseStudy.Key_Outcome[index].Text} />\n              </div>\n            ))}\n          </div>\n        </section>}\n\n\n        <section className='section--case-study--staff'>\n          <div className='inner'>\n            <h2>Meet the team</h2>\n            <div className='related-staff--wrapper'>\n              {caseStudy.staff_profiles.map(({ node }, index) => (\n                <div className='related-staff'>\n                  {caseStudy.staff_profiles[index].Image &&\n                    <GatsbyImage image={getImage(caseStudy.staff_profiles[index].Image)} alt={''} />\n                  }\n                  <p className='body staff-name'>\n                    {/*// Unlinked for MVP soft launch*/}\n                    {/*<a href={caseStudy.staff_profiles[index].Path}>*/}\n                    {caseStudy.staff_profiles[index].Name}\n                  {/*</a>*/}\n                </p>\n                  <p className='body staff-role'>{caseStudy.staff_profiles[index].Role}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n        {Related_Case_Studies.length > 0 &&\n          <section className='section--case-study--related'>\n            <h2>Related case studies</h2>\n            <div className='inner'>\n\n              {caseStudy.Related_Case_Studies.map(({ node }, index) => (\n                <div className='related-case-study'>\n                  <a href={caseStudy.Related_Case_Studies[index].Path}>\n                    {caseStudy.Related_Case_Studies[index].Cover_Image[0] && <img src={caseStudy.Related_Case_Studies[index].Cover_Image[0].url} alt={caseStudy.Related_Case_Studies[index].Cover_Image[0].alternativeText} />}\n\n                    {caseStudy.Related_Case_Studies[index].Title}\n                  </a>\n\n                </div>\n              ))}\n            </div>\n          </section>\n        }\n        <PrimaryPageCTA\n          title='Let’s build a public success story.'\n          subtitle='Get in touch to start.'\n          primaryButtonText='Put us to work'\n          secondaryButtonText='Join our team'\n          secondaryButtonLink='/careers/'\n        />\n      </div>\n\n\n    </GeneralLayout>\n  );\n};\n\nexport const query = graphql`\nquery CaseStudyQuery($pagePath: String!) {\n  allStrapiCaseStudy(filter: { Path: { eq: $pagePath } }) {\n    edges {\n      node {\n        Approach {\n          Text\n          Image  {\n            url\n            alternativeText\n            caption\n          }\n          Title\n        }\n        Challenge_Goal {\n          Challenge\n          Client_Goal\n        }\n        Client_Name\n        Path\n        Expertise {\n          Expertise_Content\n        }\n        Hero_Image {\n            url\n            alternativeText\n            caption\n          }\n        Key_Outcome {\n          Text\n          Title\n        }\n        Quote {\n          Quote\n          Source\n        }\n        Related_Case_Studies {\n          Path\n          Title\n          Cover_Image {\n            url\n            alternativeText\n          }\n        }\n        Service_Category {\n          Category\n        }\n        Sort_Order\n        Stats {\n          Content_Element\n          Numerical_Element\n        }\n        Summary\n        Title\n        Tools_Technologies {\n          Tools_Technologies_Content\n        }\n        staff_profiles {\n          Name\n          Role\n          Path\n          Image {\n            childImageSharp {\n              gatsbyImageData(width: 264, height: 264, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n`;\n\nexport default CaseStudyTemplate;\n\n"],"sourceRoot":""}
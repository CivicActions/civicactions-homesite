{"version":3,"sources":["webpack://civic-actions-homesite/./src/components/header.js","webpack://civic-actions-homesite/./src/components/link-button.js","webpack://civic-actions-homesite/./src/components/primary-page-cta.js","webpack://civic-actions-homesite/./src/components/seo.js","webpack://civic-actions-homesite/./src/layouts/general.js","webpack://civic-actions-homesite/./src/files/images/zoom-image.png","webpack://civic-actions-homesite/./src/pages/404.js"],"names":["React","scrolled","setScrolled","scrolledMobile","setScrolledMobile","handleScroll","offset","window","scrollY","useEffect","addEventListener","push","className","Link","to","src","extendedLogo","alt","redHeader","right","noTransition","width","customBurgerIcon","menuIcon","customCrossIcon","closeIcon","size","text","type","title","subtitle","primaryButtonText","primaryButtonLink","secondaryButtonText","secondaryButtonLink","SEO","description","image","article","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","defaultDescription","titleTemplate","siteUrl","defaultImage","twitterUsername","seo","url","htmlAttributes","lang","name","content","property","defaultProps","children","useState","hideSidebar","setHideSidebar","style","position","id","tabIndex","hidden","close","FrozenImg","href"],"mappings":"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","file":"component---src-pages-404-js-16e72d0958145a0d722c.js","sourcesContent":["import '../sass/styles.scss';\nimport React, { useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport extendedLogo from '../files/icons/ca-extended-logo.svg';\nimport menuIcon from '../files/icons/menu-icon.svg';\nimport closeIcon from '../files/icons/close-icon.svg';\nimport PropTypes from 'prop-types';\nimport MobileMenu from './menus/mobile-menu/mobile-menu';\nimport MainMenu from './menus/main-menu/main-menu'\n\nconst Header = () => {\n\n  const [scrolled, setScrolled] = React.useState(false);\n  const [scrolledMobile, setScrolledMobile] = React.useState(false);\n  const handleScroll = () => {\n    const offset = window.scrollY;\n    if (offset > 500) {\n      setScrolled(true);\n    }\n    else if (offset > 300) {\n      setScrolledMobile(true);\n    }\n    else {\n      setScrolled(false);\n      setScrolledMobile(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll)\n  })\n  let headerClasses = ['header'];\n  if (scrolled) {\n    headerClasses.push('scrolled');\n  }\n\n\n  return (\n    <header className={`${scrolled ? \"header scrolled\" : \"header\"} ${scrolledMobile ? \"scrolled-mobile\" : \"\"}`}>\n      <div className='inner'>\n        <Link to='/' className='logo'>\n          <img src={extendedLogo} alt='Civic Actions Logo'></img>\n        </Link>\n        <MainMenu redHeader={false} />\n\n      </div>\n      <MobileMenu\n        right\n        noTransition\n        width={'75%'}\n        customBurgerIcon={<img alt='mobile menu navigation icon' src={menuIcon} />}\n        customCrossIcon={<img alt='mobile menu close button' src={closeIcon} />}\n      />\n    </header>\n\n  );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  onMenuClick: PropTypes.func,\n  visibility: PropTypes.bool\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst LinkButton = ({ size, src, text, type }) => (\n  <Link className={`button ${type === 'secondary' ? 'button__secondary' : 'button__primary'} ${size ?? ' '}`}\n    to={src}>\n    {text}\n  </Link>\n)\n\nexport default LinkButton;\n\nLinkButton.propTypes = {\n  size: PropTypes.string,  // Use this only when the button should be 'large'\n  src: PropTypes.string,\n  text: PropTypes.string,\n  type: PropTypes.string,\n};\n","import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkButton from '../components/link-button';\n\nconst PrimaryPageCTA = ({\n  title,\n  subtitle,\n  primaryButtonText, primaryButtonLink,\n  secondaryButtonText, secondaryButtonLink,\n}) => {\n  return (\n      <section className='primary-page-cta'>\n        <div className='inner'>\n          <div className='cta-column primary-page-cta__text'>\n\n            <h2>{title}</h2>\n            <span className={'h3'}>{subtitle}</span>\n\n          </div>\n          <div className='cta-column primary-page-cta__buttons'>\n            <LinkButton\n                src={primaryButtonLink ? primaryButtonLink : '/contact'}\n                type='primary'\n                text={primaryButtonText ? primaryButtonText : 'Put us to work'}\n            />\n            <LinkButton\n                src={secondaryButtonLink ? secondaryButtonLink: '/careers'}\n                type='secondary'\n                text={secondaryButtonText ? secondaryButtonText : 'Join our team'}\n            />\n          </div>\n        </div>\n      </section>\n  );\n};\n\nexport default PrimaryPageCTA;\n\nPrimaryPageCTA.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  primaryButtonText: PropTypes.string,\n  primaryButtonLink: PropTypes.string,\n  secondaryButtonText: PropTypes.string,\n  secondaryButtonLink: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from '@reach/router';\nimport { useStaticQuery, graphql } from 'gatsby';\n\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n  const seo = {\n    title: (`${title || defaultTitle} | CivicActions`),\n    description: description || defaultDescription,\n    image: image || `${siteUrl}${defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n  return (\n    <Helmet\n      htmlAttributes={{ lang: 'en' }}\n      title={seo.title}>\n      <meta name='description' content={seo.description} />\n      <meta name='image' content={seo.image} />\n      {seo.url && <meta property='og:url' content={seo.url} />}\n      {(article ? true : null) && <meta property='og:type' content='article' />}\n      {seo.title && <meta property='og:title' content={seo.title} />}\n      {seo.description && (\n        <meta property='og:description' content={seo.description} />\n      )}\n      {seo.image && <meta property='og:image' content={seo.image} />}\n      <meta name='twitter:card' content='summary_large_image' />\n      {twitterUsername && (\n        <meta name='twitter:creator' content={twitterUsername} />\n      )}\n      {seo.title && <meta name='twitter:title' content={seo.title} />}\n      {seo.description && (\n        <meta name='twitter:description' content={seo.description} />\n      )}\n      {seo.image && <meta name='twitter:image' content={seo.image} />}\n\n    </Helmet>\n  );\n};\nexport default SEO;\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`;\n","import '../sass/styles.scss';\nimport React, { useState } from 'react';\nimport Header from '../components/header.js';\nimport Footer from '../components/footer.js';\nimport Sidebar from '../components/sidebar.js';\nimport { Helmet } from 'react-helmet';\nimport { SkipNavLink } from '../components/skip-nav';\n\nconst GeneralLayout = ({ children }) => {\n  const [hideSidebar, setHideSidebar] = useState(true);\n\n  let closeSidebar = () => setHideSidebar(true);\n  return (\n    <div style={{ position: 'relative' }}>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en',\n        }}\n      />\n      <div>\n        <SkipNavLink />\n        <Header />\n        <main id='main-content' tabIndex='-1'>\n          <div>{children}</div>\n        </main>\n        <Footer />\n      </div>\n      <Sidebar hidden={hideSidebar} close={closeSidebar} />\n    </div>\n  );\n};\n\nexport default GeneralLayout;\n","export default __webpack_public_path__ + \"static/zoom-image-6d11f3407c3744012b2dc3496e196660.png\";","import * as React from 'react';\nimport '../sass/styles.scss';\nimport { Link } from 'gatsby';\nimport GeneralLayout from '../layouts/general';\nimport PrimaryPageCTA from '../components/primary-page-cta.js';\nimport FrozenImg from '../files/images/zoom-image.png';\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => {\n  return (\n    <GeneralLayout>\n      <SEO\n          title='Page not found'\n          description='Sorry it seems the page you were looking for was not found.'\n      />\n      <section className=\"not-found\">\n        <div className='inner'>\n        <h1>404</h1>\n        <h2>Well, that's awkward.</h2>\n        <img alt=\"Funny photo of CivicActions frozen in a Zoom call\" src={FrozenImg} />\n        <div className=\"not-found--body\">\n          <p className=\"body\">We’re frozen on Zoom and can’t find the page you’re looking for.</p>\n          <p className=\"body\">While we sign back on, here are some quick links for you:</p>\n          <div className=\"list\">\n            <p className=\"body\">\n              <Link to=\"/\">Visit our homepage</Link>\n            </p>\n            <p className=\"body\">\n              <Link to=\"/careers\">View our job listings</Link>\n            </p>\n            <p className=\"body\">\n              <a href=\"https://medium.com/civicactions\">Read our blog</a>\n            </p>\n          </div>\n        </div>\n        </div>\n      </section>\n\n      <PrimaryPageCTA\n          title='Let’s build a public success story.'\n          subtitle='Get in touch to start.'\n      />\n\n    </GeneralLayout>\n  );\n};\n\nexport default NotFoundPage;\n"],"sourceRoot":""}
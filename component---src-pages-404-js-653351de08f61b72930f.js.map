{"version":3,"sources":["webpack://civic-actions-homesite/./src/components/header.js","webpack://civic-actions-homesite/./src/components/link-button.js","webpack://civic-actions-homesite/./src/components/primary-page-cta.js","webpack://civic-actions-homesite/./src/layouts/general.js","webpack://civic-actions-homesite/./src/files/images/zoom-image.png","webpack://civic-actions-homesite/./src/pages/404.js"],"names":["className","to","src","extendedLogo","alt","right","noTransition","width","customBurgerIcon","menuIcon","customCrossIcon","closeIcon","size","text","type","title","subtitle","primaryButtonText","secondaryButtonText","secondaryButtonLink","children","useState","hideSidebar","setHideSidebar","style","position","htmlAttributes","lang","id","hidden","close","FrozenImg","href"],"mappings":"qMAsCA,IA7Be,WAEb,OACE,0BAAQA,UAAS,UACf,uBAAKA,UAAU,SACb,gBAAC,KAAD,CAAMC,GAAG,IAAID,UAAU,QACrB,uBAAKE,IAAKC,IAAcC,IAAI,wBAE9B,uBAAKJ,UAAU,cACb,gBAAC,KAAD,CAAMC,GAAG,IAAT,WACA,gBAAC,KAAD,CAAMA,GAAG,aAAT,YACA,gBAAC,KAAD,CAAMA,GAAG,iBAAT,YACA,gBAAC,KAAD,CAAMA,GAAG,IAAT,YACA,gBAAC,KAAD,CAAMA,GAAG,YAAT,WACA,gBAAC,KAAD,CAAMA,GAAG,aAAY,uBAAKD,UAAU,kBAAf,gBAGvB,gBAAC,IAAD,CACEK,OAAK,EACLC,cAAY,EACZC,MAAO,MACPC,iBAAkB,uBAAKN,IAAKO,IAAUL,IAAI,gBAC1CM,gBAAiB,uBAAKR,IAAKS,IAAWP,IAAI,uB,0DCpBpD,IAPmB,SAAC,GAAD,IAAGQ,EAAH,EAAGA,KAAMV,EAAT,EAASA,IAAKW,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAApB,OACjB,gBAAC,KAAD,CAAMd,UAAS,WAAoB,aAARc,EAAsB,oBAAsB,mBAAxD,KAA6EF,UAAQ,KAClGX,GAAIC,GACHW,K,0DC0BL,IA5BuB,SAAC,GAKjB,IAJLE,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,oBAAqBC,EACjB,EADiBA,oBAErB,OACE,2BAASnB,UAAU,oBACjB,uBAAKA,UAAU,SACb,uBAAKA,UAAU,UAEb,0BAAKe,GACL,wBAAMf,UAAW,MAAOgB,IAG1B,uBAAKhB,UAAU,OACb,gBAAC,IAAD,CAAYE,IAAI,WAAWY,KAAK,UAAUD,KAAMI,IAChD,gBAAC,IAAD,CACEf,IAAKiB,EACLL,KAAK,YACLD,KAAMK,S,kGCOlB,IAxBsB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SAAe,GACAC,eAAS,GAAxCC,EAD+B,KAClBC,EADkB,KAItC,OACE,uBAAKC,MAAO,CAAEC,SAAU,aACtB,gBAAC,IAAD,CACEC,eAAgB,CACdC,KAAM,QAGV,2BACE,gBAAC,IAAD,CAAaC,GAAG,iBAChB,gBAAC,IAAD,MACA,wBAAMA,GAAG,gBACP,2BAAMR,IAER,gBAAC,IAAD,OAEF,gBAAC,IAAD,CAASS,OAAQP,EAAaQ,MAhBf,kBAAMP,GAAe,S,2HCX1C,EAAe,IAA0B,yDCoCzC,EA7BqB,WACnB,OACE,gBAAC,IAAD,KACE,wBAAMvB,UAAU,aACd,+CACA,iCACA,mDACA,uBAAKI,IAAI,+BAA+BF,IAAK6B,IAC7C,uBAAK/B,UAAU,mBACb,qBAAGA,UAAU,QAAb,oEACA,qBAAGA,UAAU,QAAb,6DACA,uBAAKA,UAAU,QACb,qBAAGA,UAAU,QACX,gBAAC,KAAD,CAAMC,GAAG,KAAT,uBAEF,qBAAGD,UAAU,QACX,gBAAC,KAAD,CAAMC,GAAG,YAAT,0BAEF,qBAAGD,UAAU,QACX,qBAAGgC,KAAK,mCAAR,qBAKR,gBAAC,IAAD,CAAgBjB,MAAM,sCAAsCC,SAAS,yBAAyBC,kBAAkB,iBAAiBC,oBAAoB","file":"component---src-pages-404-js-653351de08f61b72930f.js","sourcesContent":["import '../sass/styles.scss';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport extendedLogo from '../files/icons/ca-extended-logo.svg';\nimport menuIcon from '../files/icons/menu-icon.svg';\nimport closeIcon from '../files/icons/close-icon.svg';\nimport PropTypes from 'prop-types';\nimport MobileMenu from '../components/mobile-menu/mobile-menu';\n\nconst Header = () => {\n\n  return (\n    <header className={`header`}>\n      <div className='inner'>\n        <Link to='/' className='logo'>\n          <img src={extendedLogo} alt='Civic Actions Logo'></img>\n        </Link>\n        <div className='header-nav'>\n          <Link to=''>company</Link>\n          <Link to='/services'>services</Link>\n          <Link to='/case-studies'>our work</Link>\n          <Link to=''>insights</Link>\n          <Link to='/careers'>careers</Link>\n          <Link to='/contact/'><div className='primary-button'>contact us</div></Link>\n        </div>\n\n        <MobileMenu\n          right\n          noTransition\n          width={'75%'}\n          customBurgerIcon={<img src={menuIcon} alt='mobile menu' />}\n          customCrossIcon={<img src={closeIcon} alt='close button' />}\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  onMenuClick: PropTypes.func,\n  visibility: PropTypes.bool\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst LinkButton = ({ size, src, text, type }) => (\n  <Link className={`button ${type == 'secondary' ? 'button__secondary' : 'button__primary'} ${size ?? ' '}`}\n    to={src}>\n    {text}\n  </Link>\n)\n\nexport default LinkButton;\n\nLinkButton.propTypes = {\n  size: PropTypes.string,  // Use this only when the button should be 'large'\n  src: PropTypes.string,\n  text: PropTypes.string,\n  type: PropTypes.string,\n};\n","import '../sass/styles.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LinkButton from '../components/link-button';\n\nconst PrimaryPageCTA = ({\n  title,\n  subtitle,\n  primaryButtonText,\n  secondaryButtonText, secondaryButtonLink,\n}) => {\n  return (\n    <section className='primary-page-cta'>\n      <div className='inner'>\n        <div className='column'>\n\n          <h2>{title}</h2>\n          <span className={'h3'}>{subtitle}</span>\n\n        </div>\n        <div className='row'>\n          <LinkButton src='/contact' type='primary' text={primaryButtonText} />\n          <LinkButton\n            src={secondaryButtonLink}\n            type='secondary'\n            text={secondaryButtonText}\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PrimaryPageCTA;\n\nPrimaryPageCTA.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  primaryButtonText: PropTypes.string.isRequired,\n  secondaryButtonText: PropTypes.string.isRequired,\n  secondaryButtonLink: PropTypes.string.isRequired,\n};\n","import '../sass/styles.scss';\nimport React, { useState } from 'react';\nimport Header from '../components/header.js';\nimport Footer from '../components/footer.js';\nimport Sidebar from '../components/sidebar.js';\nimport { Helmet } from 'react-helmet';\nimport { SkipNavLink } from '../components/skip-nav';\n\nconst GeneralLayout = ({ children }) => {\n  const [hideSidebar, setHideSidebar] = useState(true);\n  let openSidebar = () => setHideSidebar(false);\n  let closeSidebar = () => setHideSidebar(true);\n  return (\n    <div style={{ position: 'relative' }}>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en',\n        }}\n      />\n      <div>\n        <SkipNavLink id=\"main-content\" />\n        <Header />\n        <main id=\"main-content\">\n          <div>{children}</div>\n        </main>\n        <Footer />\n      </div>\n      <Sidebar hidden={hideSidebar} close={closeSidebar} />\n    </div>\n  );\n};\n\nexport default GeneralLayout;\n","export default __webpack_public_path__ + \"static/zoom-image-bdd2d1cf1b968510405492502423524d.png\";","import * as React from 'react';\nimport '../sass/styles.scss';\nimport { Link } from 'gatsby';\nimport GeneralLayout from '../layouts/general';\nimport PrimaryPageCTA from '../components/primary-page-cta.js';\nimport FrozenImg from '../files/images/zoom-image.png';\n\nconst NotFoundPage = () => {\n  return (\n    <GeneralLayout>\n      <main className=\"not-found\">\n        <title>Page Not found</title>\n        <h1>404</h1>\n        <h2>Well, that's awkward.</h2>\n        <img alt=\"image of frozen zoom screens\" src={FrozenImg} />\n        <div className=\"not-found--body\">\n          <p className=\"body\">We’re frozen on Zoom and can’t find the page you’re looking for.</p>\n          <p className=\"body\">While we sign back on, here are some quick links for you:</p>\n          <div className=\"list\">\n            <p className=\"body\">\n              <Link to=\"/\">Visit our homepage</Link>\n            </p>\n            <p className=\"body\">\n              <Link to=\"/careers\">View our job listings</Link>\n            </p>\n            <p className=\"body\">\n              <a href=\"https://medium.com/civicactions\">Read our blog</a>\n            </p>\n          </div>\n        </div>\n      </main>\n      <PrimaryPageCTA title=\"Let’s build a public success story.\" subtitle=\"Get in touch to start.\" primaryButtonText=\"PUT US TO WORK\" secondaryButtonText=\"JOIN OUR TEAM\" />\n    </GeneralLayout>\n  );\n};\n\nexport default NotFoundPage;\n"],"sourceRoot":""}